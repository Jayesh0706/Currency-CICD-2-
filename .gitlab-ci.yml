stages:
  - installation
  - build-app
  - code-check
  - test-app
  - docker-image-building
  - trivy-image-scan
  - docker-image-push
  - deploy-on-kubernetes



.tools_installation:
  stage: installation
  script:

    - sudo yum install docker -y 
    - systemctl start docker
    - chmod 666 /var/run/docker.sock  #To add user in Docker-group to avoid giving sudo permission continiou  

     
    - echo "[trivy]" | sudo tee /etc/yum.repos.d/trivy.repo
    - echo "name=Trivy repository" | sudo tee -a /etc/yum.repos.d/trivy.repo
    - echo "baseurl=https://aquasecurity.github.io/trivy-repo/rpm/releases/7/\$basearch/" | sudo tee -a /etc/yum.repos.d/trivy.repo
    - echo "gpgcheck=0" | sudo tee -a /etc/yum.repos.d/trivy.repo
    - echo "enabled=1" | sudo tee -a /etc/yum.repos.d/trivy.repo
    - sudo yum install trivy -y
  tags:
    - currency


.Scanning file-system with trivy:
  stage: code-check
  script: 
    - trivy fs --format table -o fs.html .
  tags:
    - currency
  artifacts:
    paths:
      - fs.html
    when: always

.sonarqube-check:
  stage: code-check
  image: 
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis 
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main

.Building Docker Image:
  stage: docker-image-building
  script:
    - docker build -t jayesh0706/currency:0.1 . 
  tags:
    - currency

.Scanning Image:
  stage: trivy-image-scan
  script:
    - trivy image --severity HIGH,CRITICAL jayesh0706/currency:0.1 
  allow_failure: false
  tags:
    - currency

Pushing-docker image:
  stage: docker-image-push
  script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push jayesh0706/currency:0.1
  tags:
    - currency


K8s-deploy:
  stage: deploy-on-kubernetes
  variables:
    KUBECONFIG_PATH: /home/ubuntu/.kube/config  # Ensure this path is correct for your environment
  before_script:
    - mkdir -p $(dirname "$KUBECONFIG_PATH")   # This ensures the directory is created
    - echo "$KUBECONFIG_CONTENT" | base64 -d > "$KUBECONFIG_PATH"
    - export KUBECONFIG="$KUBECONFIG_PATH"
  script:
    - kubectl apply -f deployment-service.yaml
  tags:
    - currency
  only:
    - main
